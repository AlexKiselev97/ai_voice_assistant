@startuml
actor User
participant "Assistant" as assistant
participant "tts_helper" as tts
participant "asr_helper" as asr
participant "llm_helper" as llm
participant "sound device" as sound

assistant -> tts : get_voice_engine(current_tts, lang)
activate tts
tts --> assistant : tts_engine
deactivate tts

assistant -> asr : get_asr_engine(current_asr, lang)
activate asr
asr --> assistant : asr_engine
deactivate asr

loop while !stop_event.is_set()
    assistant -> asr : detect_keyword(keyword, asr_engine, stop_event)
    activate asr
    asr --> assistant : detected
    deactivate asr
    
    alt detected == True
        assistant -> sound : play detection.wav
        activate sound
        sound --> assistant
        deactivate sound
        
        assistant -> asr : capture_command(asr_engine, stop_event)
        activate asr
        asr --> assistant : command
        deactivate asr
        
        alt command exists and !stop_event.is_set()
            assistant -> llm : get_response(command, model, lang)
            activate llm
            llm --> assistant : response
            deactivate llm
            
            assistant -> llm : parse_response(response)
            activate llm
            llm --> assistant : thoughts, response
            deactivate llm
            
            assistant -> llm : print_model_response()
            activate llm
            llm --> assistant
            deactivate llm
            
            assistant -> tts : text_to_speech(response, lang, stop_event)
            activate tts
            tts --> assistant
            deactivate tts
        else
            assistant -> sound : play error.wav
            activate sound
            sound --> assistant
            deactivate sound
        end
    else
        note right: Keyword not detected
    end
end

assistant -> assistant : set_status("Deactivated")
note over assistant: Thread terminated
@enduml